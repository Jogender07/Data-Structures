#include <stdio.h>
#define SIZE 10  // Hash table size

int hashTable[SIZE];

// Function to initialize hash table
void initTable() {
    for (int i = 0; i < SIZE; i++) {
        hashTable[i] = -1; // -1 means empty slot
    }
}

// Function to insert key using linear probing
void insert(int key) {
    int index = key % SIZE;
    int startIndex = index;

    while (hashTable[index] != -1) {
        index = (index + 1) % SIZE;
        if (index == startIndex) {
            printf("\nHash table is full! Cannot insert %d\n", key);
            return;
        }
    }
    hashTable[index] = key;
    printf("%d inserted at index %d\n", key, index);
}

// Function to search key in hash table
void search(int key) {
    int index = key % SIZE;
    int startIndex = index;

    while (hashTable[index] != -1) {
        if (hashTable[index] == key) {
            printf("%d found at index %d\n", key, index);
            return;
        }
        index = (index + 1) % SIZE;
        if (index == startIndex) break;
    }
    printf("%d not found in hash table.\n", key);
}

// Function to display the hash table
void display() {
    printf("\nHash Table:\n");
    for (int i = 0; i < SIZE; i++) {
        printf("Index %d: ", i);
        if (hashTable[i] == -1)
            printf("Empty\n");
        else
            printf("%d\n", hashTable[i]);
    }
}

int main() {
    int choice, key;
    initTable();

    while (1) {
        printf("\n--- Hash Table Menu ---\n");
        printf("1. Insert\n2. Search\n3. Display\n4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
        case 1:
            printf("Enter key to insert: ");
            scanf("%d", &key);
            insert(key);
            break;
        case 2:
            printf("Enter key to search: ");
            scanf("%d", &key);
            search(key);
            break;
        case 3:
            display();
            break;
        case 4:
            printf("Exiting...\n");
            return 0;
        default:
            printf("Invalid choice! Try again.\n");
        }
    }
}
